version: '3.9'

services:
  db:
    image: postgres:15
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/entrypoint-initdb.d:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_MULTIPLE_DATABASES: donation_api_development,donation_api_test
    ports:
      - "5432:5432"  # Standard Postgres port
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  base:
    build: .
    volumes:
      - .:/app
      - bundle_cache:/usr/local/bundle
    depends_on:
      db:
        condition: service_healthy

  api:
    extends:
      service: base
    command: bash -c "rm -f tmp/pids/server.pid && rails db:create db:migrate && rails server -b 0.0.0.0"
    ports:
      - "3000:3000"
    environment:
      RAILS_ENV: development
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: donation_api_development

  test:
    extends:
      service: base
    command: bash -c "rm -f tmp/pids/server.pid && rails db:create db:migrate && bundle exec rspec"
    environment:
      RAILS_ENV: test
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: donation_api_test

volumes:
  postgres_data:
  bundle_cache:
